import { TextLine } from 'transliteration/domain/line'

export const columns: TextLine = new TextLine({
  prefix: 'c1.',
  content: [
    {
      enclosureType: [],
      erasure: 'NONE',
      cleanValue: '&',
      value: '&',
      type: 'Column',
      number: null,
    },
    {
      enclosureType: [],
      erasure: 'NONE',
      cleanValue: 'kur',
      value: 'kur',
      language: 'AKKADIAN',
      normalized: false,
      lemmatizable: true,
      uniqueLemma: [],
      parts: [
        {
          enclosureType: [],
          erasure: 'NONE',
          cleanValue: 'kur',
          value: 'kur',
          type: 'Reading',
          name: 'kur',
          nameParts: [
            {
              enclosureType: [],
              erasure: 'NONE',
              cleanValue: 'kur',
              value: 'kur',
              type: 'ValueToken',
            },
          ],
          subIndex: 1,
          modifiers: [],
          flags: [],
          sign: null,
        },
      ],
      type: 'Word',
    },
    {
      enclosureType: [],
      erasure: 'NONE',
      cleanValue: '&',
      value: '&',
      type: 'Column',
      number: null,
    },
    {
      enclosureType: [],
      erasure: 'NONE',
      cleanValue: 'kur',
      value: 'kur',
      language: 'AKKADIAN',
      normalized: false,
      lemmatizable: true,
      uniqueLemma: [],
      parts: [
        {
          enclosureType: [],
          erasure: 'NONE',
          cleanValue: 'kur',
          value: 'kur',
          name: 'kur',
          nameParts: [
            {
              enclosureType: [],
              erasure: 'NONE',
              cleanValue: 'kur',
              value: 'kur',
              type: 'ValueToken',
            },
          ],
          subIndex: 1,
          modifiers: [],
          flags: [],
          sign: null,
          type: 'Reading',
        },
      ],
      type: 'Word',
    },
    {
      enclosureType: [],
      erasure: 'NONE',
      cleanValue: '&',
      value: '&',
      type: 'Column',
      number: null,
    },
    {
      enclosureType: [],
      erasure: 'NONE',
      cleanValue: 'kur',
      value: 'kur',
      language: 'AKKADIAN',
      normalized: false,
      lemmatizable: true,
      uniqueLemma: [],
      parts: [
        {
          enclosureType: [],
          erasure: 'NONE',
          cleanValue: 'kur',
          value: 'kur',
          name: 'kur',
          nameParts: [
            {
              enclosureType: [],
              erasure: 'NONE',
              cleanValue: 'kur',
              value: 'kur',
              type: 'ValueToken',
            },
          ],
          subIndex: 1,
          modifiers: [],
          flags: [],
          sign: null,
          type: 'Reading',
        },
      ],
      type: 'Word',
    },
  ],
  lineNumber: {
    number: 1,
    hasPrime: false,
    prefixModifier: 'c',
    suffixModifier: null,
    type: 'LineNumber',
  },
  type: 'TextLine',
})

export const columnsWithSpan: TextLine = new TextLine({
  prefix: 'c2.',
  content: [
    {
      enclosureType: [],
      erasure: 'NONE',
      cleanValue: '&2',
      value: '&2',
      type: 'Column',
      number: 2,
    },
    {
      enclosureType: [],
      erasure: 'NONE',
      cleanValue: 'kur',
      value: 'kur',
      language: 'AKKADIAN',
      normalized: false,
      lemmatizable: true,
      uniqueLemma: [],
      parts: [
        {
          enclosureType: [],
          erasure: 'NONE',
          cleanValue: 'kur',
          value: 'kur',
          name: 'kur',
          nameParts: [
            {
              enclosureType: [],
              erasure: 'NONE',
              cleanValue: 'kur',
              value: 'kur',
              type: 'ValueToken',
            },
          ],
          subIndex: 1,
          modifiers: [],
          flags: [],
          sign: null,
          type: 'Reading',
        },
      ],
      type: 'Word',
    },
    {
      enclosureType: [],
      erasure: 'NONE',
      cleanValue: '&',
      value: '&',
      number: null,
      type: 'Column',
    },
    {
      enclosureType: [],
      erasure: 'NONE',
      cleanValue: 'kur',
      value: 'kur',
      language: 'AKKADIAN',
      normalized: false,
      lemmatizable: true,
      uniqueLemma: [],
      parts: [
        {
          enclosureType: [],
          erasure: 'NONE',
          cleanValue: 'kur',
          value: 'kur',
          name: 'kur',
          nameParts: [
            {
              enclosureType: [],
              erasure: 'NONE',
              cleanValue: 'kur',
              value: 'kur',
              type: 'ValueToken',
            },
          ],
          subIndex: 1,
          modifiers: [],
          flags: [],
          sign: null,
          type: 'Reading',
        },
      ],
      type: 'Word',
    },
  ],
  type: 'TextLine',
  lineNumber: {
    number: 2,
    hasPrime: false,
    prefixModifier: 'c',
    suffixModifier: null,
    type: 'LineNumber',
  },
})
