import { TextLine } from 'transliteration/domain/line'

export const commentaryProtocols = new TextLine({
  prefix: '9.',
  content: [
    {
      enclosureType: [],
      erasure: 'NONE',
      cleanValue: 'kur',
      value: 'kur',
      language: 'AKKADIAN',
      normalized: false,
      lemmatizable: true,
      uniqueLemma: [],
      parts: [
        {
          enclosureType: [],
          erasure: 'NONE',
          cleanValue: 'kur',
          value: 'kur',
          name: 'kur',
          nameParts: [
            {
              enclosureType: [],
              erasure: 'NONE',
              cleanValue: 'kur',
              value: 'kur',
              type: 'ValueToken',
            },
          ],
          subIndex: 1,
          modifiers: [],
          flags: [],
          sign: null,
          type: 'Reading',
        },
      ],
      type: 'Word',
    },
    {
      enclosureType: [],
      erasure: 'NONE',
      cleanValue: '!bs',
      value: '!bs',
      type: 'CommentaryProtocol',
    },
    {
      enclosureType: [],
      erasure: 'NONE',
      cleanValue: 'kur',
      value: 'kur',
      language: 'AKKADIAN',
      normalized: false,
      lemmatizable: true,
      uniqueLemma: [],
      parts: [
        {
          enclosureType: [],
          erasure: 'NONE',
          cleanValue: 'kur',
          value: 'kur',
          name: 'kur',
          nameParts: [
            {
              enclosureType: [],
              erasure: 'NONE',
              cleanValue: 'kur',
              value: 'kur',
              type: 'ValueToken',
            },
          ],
          subIndex: 1,
          modifiers: [],
          flags: [],
          sign: null,
          type: 'Reading',
        },
      ],
      type: 'Word',
    },
    {
      enclosureType: [],
      erasure: 'NONE',
      cleanValue: '!cm',
      value: '!cm',
      type: 'CommentaryProtocol',
    },
    {
      enclosureType: [],
      erasure: 'NONE',
      cleanValue: 'kur',
      value: 'kur',
      language: 'AKKADIAN',
      normalized: false,
      lemmatizable: true,
      uniqueLemma: [],
      parts: [
        {
          enclosureType: [],
          erasure: 'NONE',
          cleanValue: 'kur',
          value: 'kur',
          name: 'kur',
          nameParts: [
            {
              enclosureType: [],
              erasure: 'NONE',
              cleanValue: 'kur',
              value: 'kur',
              type: 'ValueToken',
            },
          ],
          subIndex: 1,
          modifiers: [],
          flags: [],
          sign: null,
          type: 'Reading',
        },
      ],
      type: 'Word',
    },
    {
      enclosureType: [],
      erasure: 'NONE',
      cleanValue: '!qt',
      value: '!qt',
      type: 'CommentaryProtocol',
    },
    {
      enclosureType: [],
      erasure: 'NONE',
      cleanValue: 'kur',
      value: 'kur',
      language: 'AKKADIAN',
      normalized: false,
      lemmatizable: true,
      uniqueLemma: [],
      parts: [
        {
          enclosureType: [],
          erasure: 'NONE',
          cleanValue: 'kur',
          value: 'kur',
          name: 'kur',
          nameParts: [
            {
              enclosureType: [],
              erasure: 'NONE',
              cleanValue: 'kur',
              value: 'kur',
              type: 'ValueToken',
            },
          ],
          subIndex: 1,
          modifiers: [],
          flags: [],
          sign: null,
          type: 'Reading',
        },
      ],
      type: 'Word',
    },
    {
      enclosureType: [],
      erasure: 'NONE',
      cleanValue: '!zz',
      value: '!zz',
      type: 'CommentaryProtocol',
    },
    {
      enclosureType: [],
      erasure: 'NONE',
      cleanValue: 'kur',
      value: 'kur',
      language: 'AKKADIAN',
      normalized: false,
      lemmatizable: true,
      uniqueLemma: [],
      parts: [
        {
          enclosureType: [],
          erasure: 'NONE',
          cleanValue: 'kur',
          value: 'kur',
          name: 'kur',
          nameParts: [
            {
              enclosureType: [],
              erasure: 'NONE',
              cleanValue: 'kur',
              value: 'kur',
              type: 'ValueToken',
            },
          ],
          subIndex: 1,
          modifiers: [],
          flags: [],
          sign: null,
          type: 'Reading',
        },
      ],
      type: 'Word',
    },
  ],
  lineNumber: {
    number: 9,
    hasPrime: false,
    prefixModifier: null,
    suffixModifier: null,
    type: 'LineNumber',
  },
  type: 'TextLine',
})
