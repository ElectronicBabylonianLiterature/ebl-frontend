name: CI

on:
  push:
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v1
        with:
          node-version: '14'

      - name: Install
        id: install
        run: yarn install --dev --frozen-lockfile

      - name: Lint
        if: success() || steps.install.outcome == 'success'
        run: yarn lint
     
      - name: Compile
        if: success() || steps.install.outcome == 'success'
        run: yarn tsc

      - name: Unit Tests
        id: unit_tests
        if: success() || steps.install.outcome == 'success'
        env:
          CI: true
        run: yarn test --coverage --forceExit --detectOpenHandles
          
      - uses: paambaati/codeclimate-action@v2.7.4
        if: success() || steps.unit_tests.outcome == 'failure'
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.TEST_REPORTER_ID }}

      - uses: edge/simple-slack-notify@v1.1.1
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          channel: '#custer_alerts'
          success_text: '${env.GITHUB_WORKFLOW} (${env.GITHUB_RUN_NUMBER}) build completed successfully'
          failure_text: '${env.GITHUB_WORKFLOW} (${env.GITHUB_RUN_NUMBER}) build failed'
          cancelled_text: '${env.GITHUB_WORKFLOW} (${env.GITHUB_RUN_NUMBER}) build was cancelled'
          fields: |
            [{"title": "Repository", "value": "${env.GITHUB_REPOSITORY}", "short": true },
             {"title": "Branch", "value": "${env.BRANCH}", "short": true },
             {"title": "Action URL", "value": "${env.GITHUB_SERVER_URL}/${env.GITHUB_REPOSITORY}/actions/runs/${env.GITHUB_RUN_ID}"}]
  
  deploy:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    needs: [test]
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.6.8
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name:  ${{secrets.HEROKU_APP_NAME}}
          heroku_email:  ${{secrets.HEROKU_EMAIL}}
          healthcheck: "https://www.ebabylon.org"
