name: CI

on:
  push:
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v1
        with:
          node-version: '14'

      - name: Install
        id: install
        run: yarn install --dev --frozen-lockfile

      - name: Lint
        if: success() || steps.install.outcome == 'success'
        run: yarn lint
     
      - name: Compile
        if: success() || steps.install.outcome == 'success'
        run: yarn tsc

      - name: Unit Tests
        id: unit_tests
        if: success() || steps.install.outcome == 'success'
        env:
          CI: true
        run: yarn test --coverage --forceExit --detectOpenHandles
          
      - uses: paambaati/codeclimate-action@v2.7.4
        if: success() || steps.unit_tests.outcome == 'failure'
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.TEST_REPORTER_ID }}

      - uses: edge/simple-slack-notify@v1.1.1
        if: failure()
        with:
          channel: '#continuous-integration'
          status: ${{ job.status }}
          success_text: 'eBL frontend  build #${env.GITHUB_RUN_NUMBER} build completed successfully.'
          failure_text: 'eBL frontend  build #${env.GITHUB_RUN_NUMBER} failed.'
          cancelled_text: 'eBL frontend  build #${env.GITHUB_RUN_NUMBER} build was cancelled.'
          fields: |
            [{"title": "Repository", "value": "${env.GITHUB_REPOSITORY}", "short": true },
             {"title": "Ref", "value": "${env.GITHUB_REF}", "short": true },
             {"title": "Action URL", "value": "${env.GITHUB_SERVER_URL}/${env.GITHUB_REPOSITORY}/actions/runs/${env.GITHUB_RUN_ID}"}]
  
  docker:
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: docker/setup-buildx-action@v1
        
      - uses: docker/login-action@v1 
        with:
          registry: registry.cluster.ebabylon.org
          username: ${{ secrets.EBL_REGISTRY_USERNAME }}
          password: ${{ secrets.EBL_REGISTRY_PASSWORD }}

      - id: docker_build
        uses: docker/build-push-action@v2
        with:        
          build-args: |
            REACT_APP_AUTH0_DOMAIN=auth.ebabylon.org
            REACT_APP_AUTH0_REDIRECT_URI=https://www.ebabylon.org
            REACT_APP_AUTH0_CLIENT_ID=${{ secrets.REACT_APP_AUTH0_CLIENT_ID }}
            REACT_APP_AUTH0_RETURN_TO=https://www.ebabylon.org
            REACT_APP_AUTH0_AUDIENCE=${{ secrets.REACT_APP_AUTH0_AUDIENCE }}
            REACT_APP_DICTIONARY_API_URL=https://api.ebabylon.org
            REACT_APP_SENTRY_DSN=${{ secrets.REACT_APP_SENTRY_DSN }}
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            registry.cluster.ebabylon.org/ebl-frontend:master
            ${{format('registry.cluster.ebabylon.org/ebl-frontend:master.{0}', github.run_number)}}
      
      - uses: edge/simple-slack-notify@v1.1.1
        if: always()
        with:
          channel: '#continuous-integration'
          status: ${{ job.status }}
          success_text: 'Building eBL frontend image #${env.GITHUB_RUN_NUMBER} completed successfully.'
          failure_text: 'Building eBL frontend image #${env.GITHUB_RUN_NUMBER} failed.'
          cancelled_text: 'Building eBL frontend image #${env.GITHUB_RUN_NUMBER} was cancelled.'
          fields: |
            [{"title": "Repository", "value": "${env.GITHUB_REPOSITORY}", "short": true },
             {"title": "Ref", "value": "${env.GITHUB_REF}", "short": true },
             {"title": "Action URL", "value": "${env.GITHUB_SERVER_URL}/${env.GITHUB_REPOSITORY}/actions/runs/${env.GITHUB_RUN_ID}"}]
